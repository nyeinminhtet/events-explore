# üåç ENVIRONMENT-SPECIFIC TESTING
name: Environment Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # üß™ DEVELOPMENT ENVIRONMENT TESTS
  test-dev:
    name: Development Tests
    runs-on: ubuntu-latest
    environment: development

    env:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: ${{ secrets.DEV_API_URL }}
      NEXT_PUBLIC_TICKETMASTER_API_KEY: ${{ secrets.DEV_TICKETMASTER_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run development tests
        run: npm run test:dev

      - name: Test API integration
        run: npm run test:api
        env:
          API_TIMEOUT: 10000

  # üöÄ STAGING ENVIRONMENT TESTS
  test-staging:
    name: Staging Tests
    runs-on: ubuntu-latest
    environment: staging
    needs: test-dev

    env:
      NODE_ENV: staging
      NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
      NEXT_PUBLIC_TICKETMASTER_API_KEY: ${{ secrets.STAGING_TICKETMASTER_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run staging tests
        run: npm run test:staging

      - name: Run smoke tests
        run: npm run test:smoke

  # üè≠ PRODUCTION-LIKE TESTS
  test-production:
    name: Production Tests
    runs-on: ubuntu-latest
    environment: production
    needs: test-staging
    if: github.ref == 'refs/heads/main'

    env:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${{ secrets.PROD_API_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Run production tests
        run: npm run test:prod

      - name: Performance benchmarks
        run: npm run test:performance
